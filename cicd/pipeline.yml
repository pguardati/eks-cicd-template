AWSTemplateFormatVersion: 2010-09-09

Description: EKSWSV1

Parameters:
  CodeBuildDockerImage:
    Type: String
    Default: aws/codebuild/standard:4.0
    Description: AWS CodeBuild Docker optimized image
    MinLength: 3
    MaxLength: 100
    ConstraintDescription: You must enter a CodeBuild Docker image

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: CodeBuild
        Parameters:
          - CodeBuildDockerImage

    ParameterLabels:
      CodeBuildDockerImage:
        default: Docker image

Resources:

  EcrDockerRepository:
    Type: AWS::ECR::Repository
    DeletionPolicy: Retain

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - ssm:GetParameters
              - Resource: '*'
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Resource: '*'
                Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeDhcpOptions
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
                  - ec2:CreateNetworkInterfacePermission
              - Resource: '*'
                Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
              - Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrDockerRepository}
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
  #              - Resource: !Sub arn:aws:s3:::${CodePipelineArtifactBucket}/*
  #                Effect: Allow
  #                Action:
  #                  - s3:GetObject
  #                  - s3:PutObject
  #                  - s3:GetObjectVersion
  #              - Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${KubectlRoleName}
  #                Effect: Allow
  #                Action:
  #                  - sts:AssumeRole
  #              - Resource: '*'
  #                Effect: Allow
  #                Action:
  #                  - eks:Describe*

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: !Ref CodeBuildDockerImage
        EnvironmentVariables:
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${EcrDockerRepository}
        #          - Name: REPOSITORY_NAME
        #            Value: !Ref GitSourceRepo
        #          - Name: REPOSITORY_BRANCH
        #            Value: !Ref GitBranch
        #          - Name: EKS_CLUSTER_NAME
        #            Value: !Ref EksClusterName
        #          - Name: EKS_KUBECTL_ROLE_ARN
        #            Value: !Sub arn:aws:iam::${AWS::AccountId}:role/${KubectlRoleName}
        PrivilegedMode: true
      Name: !Ref AWS::StackName
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
  #    DependsOn: KubectlAssumeRoleCustomResource

